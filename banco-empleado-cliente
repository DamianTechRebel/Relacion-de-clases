import java.util.Collections;
import java.util.Comparator;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class Banco {
     String nombreDelBanco;
     long numeroDeSucursal;
     String direccion;
     long telefono;
     List<Empleado> empleados;
     List<Cliente> clientes;

    public Banco(String nombreDelBanco, long numeroDeSucursal, String direccion, long telefono) {
        this.nombreDelBanco = nombreDelBanco;
        this.numeroDeSucursal = numeroDeSucursal;
        this.direccion = direccion;
        this.telefono = telefono;
        this.empleados = new ArrayList<>();
        this.clientes = new ArrayList<>();
    }

    public Cliente clienteConMayorDineroDepositado(){
        return Collections.max(clientes, Comparator.comparingDouble(Cliente::getDineroDepositado));
    }

    public Banco() {

    }

    public String getNombreDelBanco () {
        return nombreDelBanco;
    }

    public long getNumeroDeSucursal () {
        return numeroDeSucursal;
    }

    public String getDireccion () {
        return direccion;
    }

    public long getTelefono () {
        return telefono;
    }

    public List<Empleado> getEmpleados () {
        return empleados;
    }

    public List<Cliente> getClientes () {
        return clientes;
    }

    public void setNombreDelBanco (String nombreDelBanco){
        this.nombreDelBanco = nombreDelBanco;
    }

    public void setNumeroDeSucursal ( long numeroDeSucursal){
        this.numeroDeSucursal = numeroDeSucursal;
    }

    public void setDireccion (String direccion){
        this.direccion = direccion;
    }

    public void setTelefono ( long telefono){
        this.telefono = telefono;
    }

    public void setEmpleados (List < Empleado > empleados) {
        this.empleados = empleados;
    }

    public void setClientes (List < Cliente > clientes) {
        this.clientes = clientes;
    }
}

public class Empleado {
    String nombre;
    String apellido;
    short edad;
    char sexo;
    String direccion;
    long telefono;
    long legajo;

    public Empleado(String nombre, String apellido, short edad, char sexo, String direccion, long telefono, long legajo){

        this.nombre = nombre;
        this.apellido = apellido;
        this.edad = edad;
        this.sexo = sexo;
        this.direccion = direccion;
        this.telefono = telefono;
        this.legajo = legajo;
    }

    public Empleado() {

    }

    public String getNombre() {
        return nombre;
    }

    public String getApellido() {
        return apellido;
    }

    public short getEdad() {
        return edad;
    }

    public char getSexo() {
        return sexo;
    }

    public String getDireccion() {
        return direccion;
    }

    public long getTelefono() {
        return telefono;
    }

    public long getLegajo() {
        return legajo;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    public void setEdad(short edad) {
        this.edad = edad;
    }

    public void setSexo(char sexo) {
        this.sexo = sexo;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public void setTelefono(long telefono) {
        this.telefono = telefono;
    }

    public void setLegajo(long legajo) {
        this.legajo = legajo;
    }
}

//import java.util.Date;

public class Cliente {
    String nombre;
    String apellido;
    short edad;
    char sexo;
    String direccion;
    long telefono;
    long numeroDeCuenta;
    long dineroDepositado;
    //Date fechaDeAlta;
    //Date fechaDeBaja;

    public Cliente(String nombre, String apellido, short edad, char sexo, String direccion, long telefono, long numeroDeCuenta, long dineroDepositado){

        this.nombre = nombre;
        this.apellido = apellido;
        this.edad = edad;
        this.sexo = sexo;
        this.direccion = direccion;
        this.telefono = telefono;
        this.numeroDeCuenta = numeroDeCuenta;
        this.dineroDepositado = dineroDepositado;
        //this.fechaDeAlta = fechaDeAlta;
        //this.fechaDeBaja = fechaDeBaja;
    }

    public Cliente() {

    }

    public String getNombre() {
        return nombre;
    }

    public String getApellido() {
        return apellido;
    }

    public short getEdad() {
        return edad;
    }

    public char getSexo() {
        return sexo;
    }

    public String getDireccion() {
        return direccion;
    }

    public long getTelefono() {
        return telefono;
    }

    public long getNumeroDeCuenta() {
        return numeroDeCuenta;
    }

    public double getDineroDepositado() {
        return dineroDepositado;
    }

    //public Date getFechaDeAlta() {
    // return fechaDeAlta;
    //}

    //public Date getFechaDeBaja() {
    //  return fechaDeBaja;
    //}

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    public void setEdad(short edad) {
        this.edad = edad;
    }

    public void setSexo(char sexo) {
        this.sexo = sexo;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public void setTelefono(long telefono) {
        this.telefono = telefono;
    }

    public void setNumeroDeCuenta(long numeroDeCuenta) {
        this.numeroDeCuenta = numeroDeCuenta;
    }

    public void setDineroDepositado(long dineroDepositado) {
        this.dineroDepositado = dineroDepositado;
    }

    //public void setFechaDeAlta(Date fechaDeAlta) {
    //  this.fechaDeAlta = fechaDeAlta;
    //}

    //public void setFechaDeBaja(Date fechaDeBaja) {
    //  this.fechaDeBaja = fechaDeBaja;
//    }
}



//import javax.management.BadBinaryOpValueExpException;
//import java.util.List;
//import java.text.SimpleDateFormat;
//import java.util.Date;
//import java.text.ParseException;
//import java.util.ArrayList;
//import java.util.List;
//import java.util.Scanner;

public class Main {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ArrayList<Banco> bancos = new ArrayList<Banco>();

        while (true) {

            System.out.println("===>INGRESAR DATOS DEL BANCO<===");
            System.out.print("nombre del banco: ");
            String nombreDelBanco = scanner.nextLine();

            System.out.print("numero de sucursal: ");
            long numeroDeSucursal = scanner.nextLong();
            scanner.nextLine();

            System.out.print("direccion (nombre y numero de calle): ");
            String direccion = scanner.nextLine();

            System.out.print("telefono: ");
            long telefono = scanner.nextLong();
            scanner.nextLine();

            Banco banco = new Banco(nombreDelBanco, numeroDeSucursal, direccion, telefono);
            bancos.add(banco);

            System.out.print("Ingresar mas bancos? (S/N): ");
            String continuar = scanner.nextLine();
            if (!continuar.equalsIgnoreCase("S")) {
                break;
            }
        }

        for (Banco banco : bancos) {
            System.out.println("INGRESAR CLIENTES PARA EL BANCO: " + banco.getNombreDelBanco());
            while (true) {
                System.out.print("Nombre: ");
                String nombreCliente = scanner.nextLine();

                System.out.print("Apellido: ");
                String apellidoCliente = scanner.nextLine();

                System.out.print("Edad: ");
                short edadCliente = scanner.nextShort();
                scanner.nextLine();

                System.out.print("Sexo (M/F):");
                char sexoCliente = scanner.next().charAt(0);
                scanner.nextLine();

                System.out.print("direccion (nombre y numero de calle): ");
                String direccionCliente = scanner.nextLine();

                System.out.print("telefono: ");
                long telefonoCliente = scanner.nextLong();
                scanner.nextLine();

                System.out.print("numero de cuenta: ");
                long numeroDeCuenta = scanner.nextLong();
                scanner.nextLine();

                System.out.print("dinero depositado:" + " $");
                long dineroDepositado = scanner.nextLong();
                scanner.nextLine();

                Cliente cliente = new Cliente(nombreCliente, apellidoCliente, edadCliente, sexoCliente, direccionCliente, telefonoCliente, numeroDeCuenta, dineroDepositado);
                banco.getClientes().add(cliente);

                System.out.print("INGRESAR MAS CLIENTES EN EL BANCO " + banco.getNombreDelBanco() + "? (S/N): ");
                String continuar = scanner.nextLine();
                if (!continuar.equalsIgnoreCase("S")) {
                    break;
                }
            }
        }
        for (Banco banco : bancos) {
            System.out.println("INGRESAR EMPLEADOS PARA EL BANCO: " + banco.getNombreDelBanco());
            while (true) {
                System.out.print("Nombre: ");
                String nombreEmpleado = scanner.nextLine();

                System.out.print("Apellido: ");
                String apellidoEmpleado = scanner.nextLine();

                System.out.print("Edad: ");
                short edadEmpleado = scanner.nextShort();
                scanner.nextLine();

                System.out.print("Sexo (M/F):");
                char sexoEmpleado = scanner.next().charAt(0);
                scanner.nextLine();

                System.out.print("direccion (nombre y numero de calle): ");
                String direccionEmpleado = scanner.nextLine();

                System.out.print("telefono: ");
                long telefonoEmpleado = scanner.nextLong();
                scanner.nextLine();

                System.out.print("legajo: ");
                long legajoEmpleado = scanner.nextLong();
                scanner.nextLine();

                Empleado empleado = new Empleado(nombreEmpleado, apellidoEmpleado, edadEmpleado, sexoEmpleado, direccionEmpleado, telefonoEmpleado, legajoEmpleado);
                banco.getEmpleados().add(empleado);

                System.out.print("INGRESAR MAS EMPLEADOS EN EL BANCO " + banco.getNombreDelBanco() + "? (S/N): ");
                String continuar = scanner.nextLine();
                if (!continuar.equalsIgnoreCase("S")) {
                    break;
                }
            }
        }

        for (Banco banco : bancos) {
            System.out.println("Cliente con mayor dinero depositado en el banco: " + banco.getNombreDelBanco());
            Cliente clienteConMayorDinero = banco.clienteConMayorDineroDepositado();
            System.out.println("Nombre: " + clienteConMayorDinero.getNombre());
            System.out.println("Apellido: " + clienteConMayorDinero.getApellido());
            System.out.println("Edad: " + clienteConMayorDinero.getEdad());
            System.out.println("Sexo: " + clienteConMayorDinero.getSexo());
            System.out.println("Direccion: " + clienteConMayorDinero.getDireccion());
            System.out.println("Telefono: " + clienteConMayorDinero.getTelefono());
            System.out.println("Numero de cuenta: " + clienteConMayorDinero.getNumeroDeCuenta());
            System.out.println("Dinero depositado: $" + clienteConMayorDinero.getDineroDepositado());
        }
        for (Banco banco : bancos) {
            System.out.println("Empleados del banco: " + banco.getNombreDelBanco());
            List<Empleado> empleados = banco.getEmpleados();
            for (Empleado empleado : empleados) {
                System.out.println("Legajo: " + empleado.getLegajo());
                    System.out.println("Nombre: " + empleado.getNombre());
                        System.out.println("Apellido: " + empleado.getApellido());
                            System.out.println("Edad: " + empleado.getEdad());
            }
        }
        System.out.print("Ingresar apellido del cliente: ");
        String buscarApellido = scanner.nextLine();
        boolean encontrado = false;
        for (Banco banco : bancos) {
        List<Cliente> clientes = banco.getClientes();
            for (Cliente cliente : clientes) {
            if (cliente.getApellido().equalsIgnoreCase(buscarApellido)) {
              encontrado = true;
            System.out.println("Banco que tiene un cliente con el apellido: " + buscarApellido);
                System.out.println("NombreDelBanco: " + banco.getNombreDelBanco());
                    System.out.println("Teléfono: " + banco.getNumeroDeSucursal());
                        System.out.println("Dirección: " + banco.getDireccion());
                            System.out.println("Teléfono: " + banco.getTelefono());
                }
            }
        }
    }
}
